1.Google OAuth Integration:
// src/components/Login.js
import React from 'react';
import { GoogleLogin } from 'react-google-login';

const Login = () => {
  const responseGoogle = (response) => {
    // Handle Google login response
    console.log(response);
  };

  return (
    <div>
      <h2>Login</h2>
      <GoogleLogin
        clientId="YOUR_GOOGLE_CLIENT_ID"
        onSuccess={responseGoogle}
        onFailure={responseGoogle}
        buttonText="Login with Google"
      />
    </div>
  );
};

export default Login;

2.Communication History:
// src/components/CommunicationHistory.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';

const CommunicationHistory = () => {
  const [communicationHistory, setCommunicationHistory] = useState([]);

  useEffect(() => {
    // Fetch communication history from the backend
    axios.get('/communication-history')
      .then(response => {
        setCommunicationHistory(response.data.communicationHistory);
      })
      .catch(error => {
        console.error('Error fetching communication history:', error);
      });
  }, []);

  return (
    <div>
      <h2>Communication History</h2>
      <ul>
        {communicationHistory.map((item, index) => (
          <li key={index}>{item.subject}</li>
        ))}
      </ul>
    </div>
  );
};

export default CommunicationHistory;

3.Compose Email:
// src/components/ComposeEmail.js
import React, { useState } from 'react';
import axios from 'axios';

const ComposeEmail = () => {
  const [emailData, setEmailData] = useState({
    to: '',
    subject: '',
    body: '',
  });

  const handleInputChange = (e) => {
    setEmailData({ ...emailData, [e.target.name]: e.target.value });
  };

  const handleSendEmail = (e) => {
    e.preventDefault();
    
    // Send email data to the backend
    axios.post('/send-email', emailData)
      .then(response => {
        console.log(response.data.message);
      })
      .catch(error => {
        console.error('Error sending email:', error);
      });
  };

  return (
    <div>
      <h2>Compose Email</h2>
      <form onSubmit={handleSendEmail}>
        <label>To:</label>
        <input type="email" name="to" value={emailData.to} onChange={handleInputChange} required />

        <label>Subject:</label>
        <input type="text" name="subject" value={emailData.subject} onChange={handleInputChange} required />

        <label>Body:</label>
        <textarea name="body" value={emailData.body} onChange={handleInputChange} required />

        <button type="submit">Send Email</button>
      </form>
    </div>
  );
};

export default ComposeEmail;
